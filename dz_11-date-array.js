// Цель: Создание функции для обработки массива строк, содержащих потенциальные даты.

// Контекст задания:
// Вы работаете с парсером или API, который предоставляет строки, потенциально содержащие даты.
// Некоторые строки действительно являются датами, другие нет.
// Примеры входных данных:

// Верные даты: "10.02.22", "11.12.23"
// Неверные данные: "0.13.22", "41.12"
// Задание:

// Разработайте функцию, принимающую массив строк.
// Функция должна анализировать каждую строку:
// Отфильтровать невалидные даты.
// Преобразовать валидные даты к единому формату.
// Условия валидации дат:

// Форматы дат: DD.MM.YY или MM/DD/YY.
// День не может быть больше 31.
// Месяц не может быть больше 12.
// Учитывать високосные года для февраля (опционально).
// Результат:

// Отфильтрованный и преобразованный массив содержащий только даты в едином формате.

const dateArrayStr = ['10-02-2022', 'тест', '12/05/2022', '00/12/2022', "12/05/0000", '41/12/2023', '05.02.2024', "00/00/00", '06,05,2024']
function filterDateStr() {
  let z = [];
  for (let i = 0; i < dateArrayStr.length; i++) {
    if(dateArrayStr[i].includes('/')){
      dateArrayStr[i] = [dateArrayStr[i].slice(3,5) + "," +  dateArrayStr[i].slice(0,2) + ","+ dateArrayStr[i].slice(6)];
    }
    if(dateArrayStr[i].includes('-') || dateArrayStr[i].includes('.') || dateArrayStr[i].includes(',')){
      dateArrayStr[i] = [dateArrayStr[i].replace(/[\W+]/gi,",")];
    } 
  }
  console.log(dateArrayStr)
  let x = dateArrayStr.filter(elem => typeof elem === "object")
    .flat(1)
    .map(elem => elem.split(","));
    for (let i = 0; i < x.length; i++) {
      if(x[i][0] <= 31 && x[i][1] <= 12 && x[i][1] !== "00" && x[i][0] !== "00" && x[i][2] !== "0000" ){
        z.push(x[i]);
      }  
    }
    return z.map(elem=> elem.join("-"));
 }
console.log(filterDateStr(dateArrayStr));