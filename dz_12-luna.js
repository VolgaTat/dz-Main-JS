// Цель:
// Написать функцию для проверки корректности номера карты с использованием алгоритма Луна.
// Входные данные:
// Номер карты в виде строки (например, "4561-1213-4367-2612").

// Шаги Реализации:
// Подготовка номера карты:
// 1. Очистка строки от лишних символов (например, -), оставить только числа. +
// Валидация полученной строки на корректность +

// Применение алгоритма Луна:
// Работаем с отфильтрованной последовательностью чисел. +
// Для каждой цифры в нечетной позиции: умножаем на 2.+
// Цифры в четных позициях оставляем без изменений.+
// Если результат умножения больше 9, вычитаем из него 9.+
// Формируем новую последовательность чисел.+

// Проверка результата:
// Суммируем полученные числа.
// Проверяем, делится ли сумма на 10 без остатка (используем знак процента %).
// Если делится, карта корректна (возвращаем true), иначе - нет (возвращаем false).

function valitedCard(accountNum) {
  let cardInit = accountNum.replace(/\-/gi,"").split``.map(elem => !isNaN(elem) ? Number(elem) : accountNum = false)
  for (let i = cardInit.length - 2; i >= 0 ; i = i - 2) { 
    let multiCardInit = cardInit[i] * 2;
    if(multiCardInit > 9) {
      multiCardInit = multiCardInit - 9;
    }
    cardInit[i] = multiCardInit; 
  }
  //console.log(filterInitCard); [8, 5, 3, 1, 2, 2, 2, 3, 8, 3, 3, 7, 4, 6, 2, 2]
  //Проверка результата    
  let count = 0;
  for (let k = 0; k < cardInit.length; k++) {
    count += cardInit[k];
  }
  return count % 10 === 0;
}
console.log(valitedCard("4561-1213-4367-2612"));//false
console.log(valitedCard("3476-8026-7927-037"));//true
console.log(valitedCard("3d76-8026-7%27-037"));//false
